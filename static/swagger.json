{
  "openapi": "3.0.0",
  "info": {
    "title": "Gambit Admin API",
    "description": "API for Gambit admin dashboard",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "subscribers",
      "description": "Subscribers management"
    },
    {
      "name": "users",
      "description": "Users management"
    },
    {
      "name": "leagues",
      "description": "Leagues management"
    },
    {
      "name": "teams",
      "description": "Teams management"
    },
    {
      "name": "dashboard",
      "description": "Dashboard data"
    },
    {
      "name": "content",
      "description": "Content management (FAQs, Privacy Policy, Terms & Conditions)"
    }
  ],
  "paths": {
    "/subscribers": {
      "get": {
        "tags": ["subscribers"],
        "summary": "Get all subscribers",
        "parameters": [
          {
            "in": "query",
            "name": "subscription_type",
            "schema": {
              "type": "string",
              "enum": ["monthly", "yearly"]
            },
            "description": "Filter by subscription type"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["active", "expired", "cancelled"]
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Subscriber"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["subscribers"],
        "summary": "Create a new subscriber",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriberInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Subscriber created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Subscriber"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscribers/{id}": {
      "get": {
        "tags": ["subscribers"],
        "summary": "Get subscriber by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Subscriber"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Subscriber not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["subscribers"],
        "summary": "Update subscriber",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriberInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Subscriber updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Subscriber"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Subscriber not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["subscribers"],
        "summary": "Delete subscriber",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscriber deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Subscriber deleted successfully"
                        },
                        "id": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Subscriber not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/subscribers/stats": {
      "get": {
        "tags": ["subscribers"],
        "summary": "Get subscriber statistics",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "example": 10115
                        },
                        "monthly": {
                          "type": "integer",
                          "example": 7890
                        },
                        "yearly": {
                          "type": "integer",
                          "example": 2225
                        },
                        "growth_rate": {
                          "type": "number",
                          "example": 0.8
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/dashboard": {
      "get": {
        "tags": ["dashboard"],
        "summary": "Get complete dashboard data",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "subscribers": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "example": 10115
                            },
                            "monthly": {
                              "type": "integer",
                              "example": 7890
                            },
                            "yearly": {
                              "type": "integer",
                              "example": 2225
                            },
                            "growth_rate": {
                              "type": "number",
                              "example": 0.8
                            }
                          }
                        },
                        "popular_content": {
                          "type": "object",
                          "properties": {
                            "most_viewed_league": {
                              "$ref": "#/components/schemas/League"
                            },
                            "most_viewed_team": {
                              "$ref": "#/components/schemas/Team"
                            }
                          }
                        },
                        "user_activity": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserActivity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/faqs": {
      "get": {
        "tags": ["content"],
        "summary": "Get all FAQs",
        "parameters": [
          {
            "in": "query",
            "name": "is_published",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by publication status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FAQ"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["content"],
        "summary": "Create a new FAQ",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FAQInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "FAQ created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/FAQ"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/content/faqs/{id}": {
      "get": {
        "tags": ["content"],
        "summary": "Get FAQ by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/FAQ"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "FAQ not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["content"],
        "summary": "Update FAQ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FAQInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FAQ updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/FAQ"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "FAQ not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["content"],
        "summary": "Partially update FAQ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FAQPatchInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "FAQ updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/FAQ"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "FAQ not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["content"],
        "summary": "Delete FAQ",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "FAQ deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "FAQ with ID 1 deleted successfully"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "FAQ not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/content/pages": {
      "get": {
        "tags": ["content"],
        "summary": "Get all content pages",
        "parameters": [
          {
            "in": "query",
            "name": "is_published",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by publication status"
          },
          {
            "in": "query",
            "name": "page_type",
            "schema": {
              "type": "string",
              "enum": ["privacy_policy", "terms_conditions"]
            },
            "description": "Filter by page type"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContentPage"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["content"],
        "summary": "Create a new content page",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentPageInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Content page created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/ContentPage"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/content/pages/{id}": {
      "get": {
        "tags": ["content"],
        "summary": "Get content page by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/ContentPage"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Content page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["content"],
        "summary": "Update content page",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentPageInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content page updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/ContentPage"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Content page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["content"],
        "summary": "Partially update content page",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentPagePatchInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Content page updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/ContentPage"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Content page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["content"],
        "summary": "Delete content page",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content page deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Content page with ID 1 deleted successfully"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Content page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/content/pages/type/{type}": {
      "get": {
        "tags": ["content"],
        "summary": "Get content page by type",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["privacy_policy", "terms_conditions"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/ContentPage"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Content page not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Subscriber": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "subscription_type": {
            "type": "string",
            "enum": ["monthly", "yearly"],
            "example": "monthly"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-15T10:30:00"
          },
          "status": {
            "type": "string",
            "enum": ["active", "expired", "cancelled"],
            "example": "active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          }
        }
      },
      "SubscriberInput": {
        "type": "object",
        "required": ["email", "name", "subscription_type", "start_date", "end_date", "status"],
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "subscription_type": {
            "type": "string",
            "enum": ["monthly", "yearly"],
            "example": "monthly"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-15T10:30:00"
          },
          "status": {
            "type": "string",
            "enum": ["active", "expired", "cancelled"],
            "example": "active"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "registration_date": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "example": "2023-02-15T10:30:00"
          },
          "status": {
            "type": "string",
            "enum": ["active", "inactive", "suspended"],
            "example": "active"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          }
        }
      },
      "League": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Major League Baseball"
          },
          "category": {
            "type": "string",
            "example": "Baseball"
          },
          "country": {
            "type": "string",
            "example": "USA"
          },
          "logo_url": {
            "type": "string",
            "example": "https://www.mlbstatic.com/mlb-logos/league-on-dark/logo-primary-on-dark.svg"
          },
          "popularity": {
            "type": "integer",
            "example": 4800
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          }
        }
      },
      "Team": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Baltimore Orioles"
          },
          "league_id": {
            "type": "integer",
            "example": 2
          },
          "logo_url": {
            "type": "string",
            "example": "https://www.mlbstatic.com/team-logos/110.svg"
          },
          "popularity": {
            "type": "integer",
            "example": 4800
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T10:30:00"
          }
        }
      },
      "UserActivity": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "example": "2023-01-15T00:00:00"
          },
          "active_users": {
            "type": "integer",
            "example": 2100
          },
          "new_users": {
            "type": "integer",
            "example": 150
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "An error occurred"
              },
              "details": {
                "type": "object",
                "nullable": true
              }
            }
          }
        }
      },
      "FAQ": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "question": {
            "type": "string",
            "example": "What is the difference between full truckload (FTL) and less-than-truckload (LTL) shipping?"
          },
          "answer": {
            "type": "string",
            "example": "Full Truckload (FTL) shipping is when the entire truck is dedicated to a single customer's shipment. It's typically used for larger shipments that can fill the entire trailer..."
          },
          "order": {
            "type": "integer",
            "example": 1
          },
          "is_published": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-03T14:36:03.293651"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-03T14:36:03.293833"
          }
        }
      },
      "FAQInput": {
        "type": "object",
        "required": ["question", "answer"],
        "properties": {
          "question": {
            "type": "string",
            "example": "What is the difference between full truckload (FTL) and less-than-truckload (LTL) shipping?"
          },
          "answer": {
            "type": "string",
            "example": "Full Truckload (FTL) shipping is when the entire truck is dedicated to a single customer's shipment. It's typically used for larger shipments that can fill the entire trailer..."
          },
          "order": {
            "type": "integer",
            "example": 1
          },
          "is_published": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "FAQPatchInput": {
        "type": "object",
        "properties": {
          "question": {
            "type": "string",
            "example": "What is the difference between full truckload (FTL) and less-than-truckload (LTL) shipping?"
          },
          "answer": {
            "type": "string",
            "example": "Full Truckload (FTL) shipping is when the entire truck is dedicated to a single customer's shipment. It's typically used for larger shipments that can fill the entire trailer..."
          },
          "order": {
            "type": "integer",
            "example": 1
          },
          "is_published": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ContentPage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "page_type": {
            "type": "string",
            "enum": ["privacy_policy", "terms_conditions"],
            "example": "privacy_policy"
          },
          "title": {
            "type": "string",
            "example": "Privacy Policy"
          },
          "content": {
            "type": "string",
            "example": "This Privacy Policy describes how we collect, use, and handle your personal information..."
          },
          "is_published": {
            "type": "boolean",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-03T14:36:03.293651"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-04-03T14:36:03.293833"
          }
        }
      },
      "ContentPageInput": {
        "type": "object",
        "required": ["page_type", "title", "content"],
        "properties": {
          "page_type": {
            "type": "string",
            "enum": ["privacy_policy", "terms_conditions"],
            "example": "privacy_policy"
          },
          "title": {
            "type": "string",
            "example": "Privacy Policy"
          },
          "content": {
            "type": "string",
            "example": "This Privacy Policy describes how we collect, use, and handle your personal information..."
          },
          "is_published": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "ContentPagePatchInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Privacy Policy"
          },
          "content": {
            "type": "string",
            "example": "This Privacy Policy describes how we collect, use, and handle your personal information..."
          },
          "is_published": {
            "type": "boolean",
            "example": true
          }
        }
      }
    }
  }
}
